What happens when you initialize a repository? Why do you need to do it?

I need to initialize a repository because initializing a repository allows me to begin making commits and start tracking files together.


How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is different because things can be moved in and out of it without making changes to any existing directory or repository.  This gives some more flexibility in being able to see what changes would make sense to be committed together before actually committing them.


How can you use the staging area to make sure you have one commit per logical change?

I can use git diff to compare the staging area to my working directory to see what changes I'm preparing to commit, and I can use git diff --staged to see how the changes I'm preparing to commit compare to the most recent commit in the repository.  This will help me figure out if the commit is logical.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If I'm working on a set of recipes that contain meat, but I want to make some vegetarian or vegan versions, it would be helpful to have branches.  Branches would help because they would allow me to make changes to the recipes to make them vegetarian or vegan without confusing it with changes I may continue to make to the recipe with meat in it.


How do the diagrams help you visualize the branch structure?

The diagrams help me have a better understanding of the path that a commit will be on depending on if I commit it in the master branch tip, another branch tip, or not on a tip in which case I will need to create a new branch or the commit will not be reachable.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging two branches together combines the changes made in both branches.  It is represented in the diagram the way that it is becuase the most recent commit formed by the merge leads back to all the commits from both branches in the merge.
